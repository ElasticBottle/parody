/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProductImport } from './routes/product'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as ProductPhotoImport } from './routes/product.photo'
import { Route as ProductNameImport } from './routes/product.name'
import { Route as DashboardProductImport } from './routes/dashboard/product'
import { Route as DashboardProductIndexImport } from './routes/dashboard/product.index'
import { Route as DashboardProductProductIdImport } from './routes/dashboard/product.$productId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ProductRoute = ProductImport.update({
  path: '/product',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProductPhotoRoute = ProductPhotoImport.update({
  path: '/photo',
  getParentRoute: () => ProductRoute,
} as any)

const ProductNameRoute = ProductNameImport.update({
  path: '/name',
  getParentRoute: () => ProductRoute,
} as any)

const DashboardProductRoute = DashboardProductImport.update({
  path: '/product',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProductIndexRoute = DashboardProductIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardProductRoute,
} as any)

const DashboardProductProductIdRoute = DashboardProductProductIdImport.update({
  path: '/$productId',
  getParentRoute: () => DashboardProductRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/product': {
      id: '/dashboard/product'
      path: '/product'
      fullPath: '/dashboard/product'
      preLoaderRoute: typeof DashboardProductImport
      parentRoute: typeof DashboardImport
    }
    '/product/name': {
      id: '/product/name'
      path: '/name'
      fullPath: '/product/name'
      preLoaderRoute: typeof ProductNameImport
      parentRoute: typeof ProductImport
    }
    '/product/photo': {
      id: '/product/photo'
      path: '/photo'
      fullPath: '/product/photo'
      preLoaderRoute: typeof ProductPhotoImport
      parentRoute: typeof ProductImport
    }
    '/dashboard/product/$productId': {
      id: '/dashboard/product/$productId'
      path: '/$productId'
      fullPath: '/dashboard/product/$productId'
      preLoaderRoute: typeof DashboardProductProductIdImport
      parentRoute: typeof DashboardProductImport
    }
    '/dashboard/product/': {
      id: '/dashboard/product/'
      path: '/'
      fullPath: '/dashboard/product/'
      preLoaderRoute: typeof DashboardProductIndexImport
      parentRoute: typeof DashboardProductImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardProductRoute: DashboardProductRoute.addChildren({
      DashboardProductProductIdRoute,
      DashboardProductIndexRoute,
    }),
  }),
  LoginRoute,
  ProductRoute: ProductRoute.addChildren({
    ProductNameRoute,
    ProductPhotoRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login",
        "/product"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/product"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/product": {
      "filePath": "product.tsx",
      "children": [
        "/product/name",
        "/product/photo"
      ]
    },
    "/dashboard/product": {
      "filePath": "dashboard/product.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/product/$productId",
        "/dashboard/product/"
      ]
    },
    "/product/name": {
      "filePath": "product.name.tsx",
      "parent": "/product"
    },
    "/product/photo": {
      "filePath": "product.photo.tsx",
      "parent": "/product"
    },
    "/dashboard/product/$productId": {
      "filePath": "dashboard/product.$productId.tsx",
      "parent": "/dashboard/product"
    },
    "/dashboard/product/": {
      "filePath": "dashboard/product.index.tsx",
      "parent": "/dashboard/product"
    }
  }
}
ROUTE_MANIFEST_END */
